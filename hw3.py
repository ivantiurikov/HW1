# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X.

# N = int(input('Введите кол-во элементов в массиве: '))
# digits = list()
# for i in range(N):
#     digit = int(input(f'Введите {i + 1} число массива: '))
#     digits.append(digit)
# X = int(input('Введите число, которое надо найти: '))
# print(f'Кол-во повторений числа {X} в массиве: {len([i for i in digits if i == X])}')


# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

# N = int(input('Введите кол-во элементов в массиве: '))
# digits = list()
# for i in range(N):
#     digit = int(input(f'Введите {i + 1} число массива: '))
#     digits.append(digit)
# X = int(input('Введите требуемое число: '))
# difference = X - 0
# for i in range(len(digits)):
#     if abs(X - digits[i]) < difference:
#         min_digit = digits[i]
# print(f'Ближайшее число в массиве к числу {X}: {min_digit}')


#*Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. 
# В случае с английским алфавитом очки распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко; 
# D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков; Q, Z – 10 очков. 
# А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; 
# Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков. 
# Напишите программу, которая вычисляет стоимость введенного пользователем слова. 
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.


# alphabet_eng = {
#     1:['A', 'E', 'I', 'O', 'U', 'L', 'N', 'S', 'T', 'R'],
#     2:['D', 'G'],
#     3:['B', 'C', 'M', 'P'],
#     4:['F', 'H', 'V', 'W', 'Y'],
#     5:['K'],
#     8:['J', 'X'],
#     10:['Q', 'Z']
# }
# alphabet_rus = {
#     1:['А', 'В', "Е", "И", "Н", "О", "Р", "С", "Т"],
#     2:['Д', 'К', 'Л', 'М', "П", "У"],
#     3:['Б', 'Г', 'Ё', 'Ь', "Я"],
#     4:['Ы', 'Й'],
#     5:['Ж', 'З', 'Х', 'Ц', "Ч"],
#     8:['Ш', 'Э', 'Ю'],
#     10:['Ф', 'Щ', 'Ъ']
# }
# eng_alph = 'abcdefghijklmnopqrstuvwxyz'
# rus_alph = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'
# word = input('Введите слово: ').lower()
# count = 0
# if word[0] in rus_alph:
#     for letter in word.upper():
#         for points in alphabet_rus.keys():
#             for letters in alphabet_rus[points]:
#                 if letter == letters:
#                     count += points
# else:
#     for letter in word.upper():
#         for points in alphabet_eng.keys():
#             for letters in alphabet_eng[points]:
#                 if letter == letters:
#                     count += points
# print(f'Стоимость слова: {count}')
